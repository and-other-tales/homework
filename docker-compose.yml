version: '3.8'

services:
  # Neo4j Database
  neo4j:
    image: neo4j:5.13.0
    container_name: homework-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-password}
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
    networks:
      - homework-network
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API service
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    environment:
      - NODE_ENV=production
      - PORT=8080
      - HUGGINGFACE_TOKEN=${HUGGINGFACE_TOKEN:-}
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - NEO4J_URI=${NEO4J_URI:-bolt://neo4j:7687}
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
    networks:
      - homework-network
    depends_on:
      neo4j:
        condition: service_healthy

  # Frontend web application
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/public:/app/public
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:8080/api
    depends_on:
      - api
    networks:
      - homework-network

networks:
  homework-network:
    driver: bridge

volumes:
  backend_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins: